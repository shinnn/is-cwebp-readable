'use strict';

const isCwebpReadable = require('.');
const test = require('tape');

const fixtures = {
  jpg: [
    255,
    216,
    255,
    219,
    0,
    67,
    0,
    3,
    2,
    2,
    2,
    2,
    2,
    3,
    2,
    2,
    2,
    3,
    3,
    3,
    3,
    4,
    6,
    4,
    4,
    4,
    4,
    4,
    8,
    6,
    6,
    5,
    6,
    9,
    8,
    10,
    10,
    9,
    8,
    9,
    9,
    10,
    12,
    15,
    12,
    10,
    11,
    14,
    11,
    9,
    9,
    13,
    17,
    13,
    14,
    15,
    16,
    16,
    17,
    16,
    10,
    12,
    18,
    19,
    18,
    16,
    19,
    15,
    16,
    16,
    16,
    255,
    201,
    0,
    11,
    8,
    0,
    1,
    0,
    1,
    1,
    1,
    17,
    0,
    255,
    204,
    0,
    6,
    0,
    16,
    16,
    5,
    255,
    218,
    0,
    8,
    1,
    1,
    0,
    0,
    63,
    0,
    210,
    207,
    32,
    255,
    217
  ],
  png: [
    137,
    80,
    78,
    71,
    13,
    10,
    26,
    10,
    0,
    0,
    0,
    13,
    73,
    72,
    68,
    82,
    0,
    0,
    0,
    1,
    0,
    0,
    0,
    1,
    8,
    6,
    0,
    0,
    0,
    31,
    21,
    196,
    137,
    0,
    0,
    0,
    10,
    73,
    68,
    65,
    84,
    120,
    156,
    99,
    0,
    1,
    0,
    0,
    5,
    0,
    1,
    13,
    10,
    45,
    180,
    0,
    0,
    0,
    0,
    73,
    69,
    78,
    68,
    174,
    66,
    96,
    130
  ],
  tif: [
    77,
    77,
    0,
    42,
    0,
    0,
    0,
    8,
    0,
    7,
    1,
    0,
    0,
    3,
    0,
    0,
    0,
    1,
    0,
    8,
    0,
    0,
    1,
    1,
    0,
    3,
    0,
    0,
    0,
    1,
    0,
    1,
    0,
    0,
    1,
    6,
    0,
    3,
    0,
    0,
    0,
    1,
    0,
    0,
    0,
    0,
    1,
    17,
    0,
    3,
    0,
    0,
    0,
    1,
    0,
    114,
    0,
    0,
    1,
    23,
    0,
    3,
    0,
    0,
    0,
    1,
    0,
    1,
    0,
    0,
    1,
    26,
    0,
    5,
    0,
    0,
    0,
    1,
    0,
    0,
    0,
    98,
    1,
    27,
    0,
    5,
    0,
    0,
    0,
    1,
    0,
    0,
    0,
    106,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    2,
    0,
    0,
    0,
    1,
    0,
    0,
    0,
    2,
    0,
    0,
    0,
    1,
    90
  ],
  webp: [
    82,
    73,
    70,
    70,
    18,
    0,
    0,
    0,
    87,
    69,
    66,
    80,
    86,
    80,
    56,
    76,
    6,
    0,
    0,
    0,
    47,
    65,
    108,
    111,
    0,
    107
  ]
};

test('isCwebpReadable', t => {
  t.strictEqual(isCwebpReadable.name, 'isCwebpReadable', 'should have a function name.');

  t.ok(isCwebpReadable(Buffer.from(fixtures.png)), 'should detect PNG from a buffer.');
  t.ok(isCwebpReadable(new Uint8Array(fixtures.png)), 'should detect PNG from an Uint8Array.');

  t.ok(isCwebpReadable(Buffer.from(fixtures.jpg)), 'should detect JPEG from a buffer.');
  t.ok(isCwebpReadable(new Uint8Array(fixtures.jpg)), 'should detect JPEG from an Uint8Array.');

  t.ok(isCwebpReadable(Buffer.from(fixtures.tif)), 'should detect TIFF from a buffer.');
  t.ok(isCwebpReadable(new Uint8Array(fixtures.tif)), 'should detect TIFF from an Uint8Array.');

  t.ok(isCwebpReadable(Buffer.from(fixtures.webp)), 'should detect WEBP from a buffer.');
  t.ok(isCwebpReadable(new Uint8Array(fixtures.webp)), 'should detect WEBP from an Uint8Array.');

  t.notOk(
    isCwebpReadable(Buffer.from('foo')),
    'should return false when it takes a buffer cwebp cannot read.'
  );
  t.notOk(
    isCwebpReadable(new Uint8Array([1, 2, 3, 4])),
    'should return false when it takes an Uint8Array cwebp cannot read.'
  );
  t.notOk(
    isCwebpReadable('foo'),
    'should return false when it takes an unsupported-type value.'
  );
  t.notOk(
    isCwebpReadable(),
    'should return false when it takes no arguments.'
  );

  t.end();
});
